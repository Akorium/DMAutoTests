// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;

#pragma warning disable 1573, 1591
#nullable enable

namespace DMAutoTests
{
	[Table("AREA")]
	public class Area
	{
		[Column("ID"                           , IsPrimaryKey = true)] public int     Id                         { get; set; } // int
		[Column("NAME"                                              )] public string? Name                       { get; set; } // nvarchar(32)
		[Column("ZONE_NUMBER"                                       )] public byte?   ZoneNumber                 { get; set; } // tinyint
		[Column("CENTER_X"                                          )] public double? CenterX                    { get; set; } // float
		[Column("CENTER_Y"                                          )] public double? CenterY                    { get; set; } // float
		[Column("LatBot"                                            )] public double? LatBot                     { get; set; } // float
		[Column("LatTop"                                            )] public double? LatTop                     { get; set; } // float
		[Column("LngBot"                                            )] public double? LngBot                     { get; set; } // float
		[Column("LngTop"                                            )] public double? LngTop                     { get; set; } // float
		[Column("HEMISPHERE"                                        )] public char?   Hemisphere                 { get; set; } // nvarchar(1)
		[Column("ACTIVE"                                            )] public bool?   Active                     { get; set; } // bit
		[Column("MAP"                                               )] public string? Map                        { get; set; } // nvarchar(32)
		[Column("COORDS_TRANSFORMATION_TYPE_ID"                     )] public int?    CoordsTransformationTypeId { get; set; } // int
	}
}
