// ---------------------------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by LinqToDB scaffolding tool (https://github.com/linq2db/linq2db).
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
// ---------------------------------------------------------------------------------------------------

using LinqToDB.Mapping;

#pragma warning disable 1573, 1591
#nullable enable

namespace DMAutoTests
{
	[Table("HOLE")]
	public class Hole
	{
		[Column("ID"                                                                                  )] public int?    Id               { get; set; } // int
		[Column("NAME"             , CanBeNull    = false, IsPrimaryKey    = true, PrimaryKeyOrder = 0)] public string  Name             { get; set; } = null!; // nvarchar(32)
		[Column("DRILL_BLOCK_ID"   , IsPrimaryKey = true , PrimaryKeyOrder = 1                        )] public int     DrillBlockId     { get; set; } // int
		[Column("DESIGN_X"                                                                            )] public double? DesignX          { get; set; } // float
		[Column("DESIGN_Y"                                                                            )] public double? DesignY          { get; set; } // float
		[Column("DESIGN_Z"                                                                            )] public double? DesignZ          { get; set; } // float
		[Column("DESIGN_DEPTH"                                                                        )] public double? DesignDepth      { get; set; } // float
		[Column("DESIGN_HEADING"                                                                      )] public double? DesignHeading    { get; set; } // float
		[Column("DESIGN_PITCH"                                                                        )] public double? DesignPitch      { get; set; } // float
		[Column("REAL_X"                                                                              )] public double? RealX            { get; set; } // float
		[Column("REAL_Y"                                                                              )] public double? RealY            { get; set; } // float
		[Column("REAL_Z"                                                                              )] public double? RealZ            { get; set; } // float
		[Column("REAL_DEPTH"                                                                          )] public double? RealDepth        { get; set; } // float
		[Column("REAL_HEADING"                                                                        )] public double? RealHeading      { get; set; } // float
		[Column("REAL_PITCH"                                                                          )] public double? RealPitch        { get; set; } // float
		[Column("RTK_MODE"                                                                            )] public int?    RtkMode          { get; set; } // int
		[Column("UNIT_ID"                                                                             )] public int?    UnitId           { get; set; } // int
		[Column("ACTIVE"                                                                              )] public bool?   Active           { get; set; } // bit
		[Column("AREA_ID"                                                                             )] public int?    AreaId           { get; set; } // int
		[Column("DESIGN_DIAMETER"                                                                     )] public double? DesignDiameter   { get; set; } // float
		[Column("REAL_DIAMETER"                                                                       )] public double? RealDiameter     { get; set; } // float
		[Column("MANUAL_ADJUSTMENT"                                                                   )] public bool?   ManualAdjustment { get; set; } // bit
		[Column("DEFECTIVE"                                                                           )] public bool?   Defective        { get; set; } // bit
		[Column("HOLE_STATUS"                                                                         )] public int?    HoleStatus       { get; set; } // int
	}
}
